{"ast":null,"code":"import _classCallCheck from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/russ/Documents/spotify/spotify-react-demo/src/SpotifyPlayerContainer.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { ScriptCache } from \"./ScriptCache\";\nimport SpotifyAuthWindow from \"./SpotifyAuthWindow\";\nimport { SpotifyAccess } from \"./SpotifyAccess\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styles from \"./App.module.css\";\n\nvar SpotifyPlayerContainer = /*#__PURE__*/function (_Component) {\n  _inherits(SpotifyPlayerContainer, _Component);\n\n  var _super = _createSuper(SpotifyPlayerContainer);\n\n  function SpotifyPlayerContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SpotifyPlayerContainer);\n\n    _this = _super.call(this, props);\n    _this.connectToPlayerTimeout = void 0;\n\n    _this.spotifySDKCallback = function () {\n      window.onSpotifyWebPlaybackSDKReady = function () {\n        if (_this.state.spotifyAccess !== SpotifyAccess.DENIED) {\n          console.log('in Access Token', _this.state.spotifyAccessToken);\n          var spotifyPlayer = new Spotify.Player({\n            name: 'React Spotify Player',\n            getOAuthToken: function getOAuthToken(cb) {\n              cb(_this.state.spotifyAccessToken);\n            }\n          }); // Playback status updates\n\n          spotifyPlayer.addListener('player_state_changed', function (state) {\n            console.log('state in spotifyPlayer', state);\n          });\n\n          _this.setState({\n            loadingState: \"spotify scripts loaded\",\n            spotifyPlayer: spotifyPlayer\n          });\n\n          if (_this.state.spotifyAccessToken !== null) {\n            _this.setState({\n              spotifyAccess: SpotifyAccess.ALLOWED,\n              loadingState: \"spotify token retrieved\"\n            });\n\n            _this.connectToPlayer();\n          }\n        } else {\n          _this.setState({\n            loadingState: \"spotify authorization rejected\"\n          });\n        }\n      };\n    };\n\n    _this.connectToPlayer = function () {\n      console.log('in connect player');\n\n      if (_this.state.spotifyPlayer) {\n        clearTimeout(_this.connectToPlayerTimeout); // Ready\n\n        _this.state.spotifyPlayer.addListener('ready', function (_ref) {\n          var device_id = _ref.device_id;\n          console.log('Ready with Device ID', device_id);\n\n          _this.setState({\n            loadingState: \"spotify player ready\",\n            spotifyDeviceId: device_id,\n            spotifyPlayerReady: true\n          });\n        }); // Not Ready\n\n\n        _this.state.spotifyPlayer.addListener('not_ready', function (_ref2) {\n          var device_id = _ref2.device_id;\n          console.log('Device ID has gone offline', device_id);\n        });\n\n        _this.state.spotifyPlayer.connect().then(function (ev) {\n          _this.setState({\n            loadingState: \"connected to player\"\n          });\n        });\n      } else {\n        _this.connectToPlayerTimeout = setTimeout(_this.connectToPlayer.bind(_assertThisInitialized(_this)), 1000);\n      }\n    };\n\n    _this.startPlayback = function (spotify_uri) {\n      fetch(\"https://api.spotify.com/v1/me/player/play?\" + \"device_id=\" + _this.state.spotifyDeviceId, {\n        method: 'PUT',\n        body: JSON.stringify({\n          uris: [spotify_uri]\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(_this.state.spotifyAccessToken)\n        }\n      }).then(function (ev) {\n        console.log(ev);\n\n        if (ev.status === 403) {\n          _this.setState({\n            loadingState: \"you need to upgrade to premium for playback\",\n            spotifyAccess: SpotifyAccess.NO_PREMIUM\n          });\n        } else {\n          _this.setState({\n            loadingState: \"playback started\",\n            playbackOn: true,\n            playbackPaused: false\n          });\n\n          console.log(\"Started playback\", _this.state);\n        }\n      }).catch(function (error) {\n        _this.setState({\n          loadingState: \"playback error: \" + error\n        });\n      });\n    };\n\n    _this.resumePlayback = function () {\n      fetch(\"https://api.spotify.com/v1/me/player/play?\" + \"device_id=\" + _this.state.spotifyDeviceId, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(_this.state.spotifyAccessToken)\n        }\n      }).then(function (ev) {\n        _this.setState({\n          playbackPaused: false\n        });\n      });\n      console.log(\"Started playback\", _this.state);\n    };\n\n    _this.pauseTrack = function () {\n      fetch(\"https://api.spotify.com/v1/me/player/pause?\" + \"device_id=\" + _this.state.spotifyDeviceId, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(_this.state.spotifyAccessToken)\n        }\n      }).then(function (ev) {\n        _this.setState({\n          playbackPaused: true\n        });\n      });\n    };\n\n    new ScriptCache([{\n      name: \"https://sdk.scdn.co/spotify-player.js\",\n      callback: _this.spotifySDKCallback\n    }]);\n    window.addEventListener(\"storage\", _this.authorizeSpotifyFromStorage);\n    _this.state = {\n      loadingState: \"loading scripts\",\n      spotifyAccessToken: props.token,\n      spotifyDeviceId: \"\",\n      spotifyAuthorizationGranted: false,\n      spotifyPlayerConnected: false,\n      spotifyPlayerReady: false,\n      spotifySDKLoaded: false,\n      spotifyPlayer: undefined,\n      spotifyAccess: SpotifyAccess.NOT_REQUESTED,\n      playbackOn: false,\n      playbackPaused: false\n    };\n    return _this;\n  }\n\n  _createClass(SpotifyPlayerContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('state spotifyPlayerReady', this.state.spotifyPlayerReady);\n      console.log('state playbackOn', this.state.playbackOn);\n      console.log('state playingRecordingId', this.props.playingRecordingId);\n      console.log('state playbackPaused', this.state.playbackPaused);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.app,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Spotify\"), /*#__PURE__*/React.createElement(SpotifyAuthWindow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.player,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }, this.state.spotifyPlayerReady && /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          if (!_this2.state.playbackOn) {\n            _this2.startPlayback(_this2.props.playingRecordingId);\n          } else {\n            if (_this2.state.playbackPaused) {\n              _this2.resumePlayback();\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FaPlay, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }\n      })), this.state.spotifyPlayerReady && this.state.playbackOn && /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          if (!_this2.state.playbackPaused) {\n            _this2.pauseTrack();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FaPause, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        className: styles.statusMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, this.state.loadingState));\n    }\n  }]);\n\n  return SpotifyPlayerContainer;\n}(Component);\n\nexport default SpotifyPlayerContainer;","map":{"version":3,"sources":["/home/russ/Documents/spotify/spotify-react-demo/src/SpotifyPlayerContainer.tsx"],"names":["React","Component","ScriptCache","SpotifyAuthWindow","SpotifyAccess","FaPause","FaPlay","styles","SpotifyPlayerContainer","props","connectToPlayerTimeout","spotifySDKCallback","window","onSpotifyWebPlaybackSDKReady","state","spotifyAccess","DENIED","console","log","spotifyAccessToken","spotifyPlayer","Spotify","Player","name","getOAuthToken","cb","addListener","setState","loadingState","ALLOWED","connectToPlayer","clearTimeout","device_id","spotifyDeviceId","spotifyPlayerReady","connect","then","ev","setTimeout","bind","startPlayback","spotify_uri","fetch","method","body","JSON","stringify","uris","headers","status","NO_PREMIUM","playbackOn","playbackPaused","catch","error","resumePlayback","pauseTrack","callback","addEventListener","authorizeSpotifyFromStorage","token","spotifyAuthorizationGranted","spotifyPlayerConnected","spotifySDKLoaded","undefined","NOT_REQUESTED","playingRecordingId","app","player","statusMessage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {ScriptCache} from \"./ScriptCache\";\nimport SpotifyAuthWindow from \"./SpotifyAuthWindow\";\nimport {SpotifyAccess} from \"./SpotifyAccess\";\nimport {getSpotifyAccess, getSpotifyAccessToken} from \"./LocalStorageData\";\nimport {FaPause, FaPlay} from \"react-icons/fa\";\nimport styles from \"./App.module.css\";\n\ninterface ISpotifyPlayerProps {\n    playingRecordingId: string;\n    token:string;\n}\n\ninterface ISpotifyPlayerState {\n    loadingState: string;\n    spotifyAccessToken: string;\n    spotifyAccess: SpotifyAccess;\n    spotifyDeviceId: string;\n    spotifySDKLoaded: boolean,\n    spotifyAuthorizationGranted: boolean,\n    spotifyPlayerConnected: boolean,\n    spotifyPlayerReady: boolean,\n    spotifyPlayer: Spotify.SpotifyPlayer | undefined,\n    playbackOn: boolean,\n    playbackPaused: boolean\n}\n\nclass SpotifyPlayerContainer extends Component <ISpotifyPlayerProps, ISpotifyPlayerState> {\n    private connectToPlayerTimeout: any;\n\n    public constructor(props: ISpotifyPlayerProps) {\n        super(props);\n\n        new ScriptCache([\n            {\n                name: \"https://sdk.scdn.co/spotify-player.js\",\n                callback: this.spotifySDKCallback\n            }]);\n\n        window.addEventListener(\"storage\", this.authorizeSpotifyFromStorage);\n\n        this.state = {\n            loadingState: \"loading scripts\",\n            spotifyAccessToken: props.token,\n            spotifyDeviceId: \"\",\n            spotifyAuthorizationGranted: false,\n            spotifyPlayerConnected: false,\n            spotifyPlayerReady: false,\n            spotifySDKLoaded: false,\n            spotifyPlayer: undefined,\n            spotifyAccess: SpotifyAccess.NOT_REQUESTED,\n            playbackOn: false,\n            playbackPaused: false\n        };\n\n\n    }\n  \n    private spotifySDKCallback = () => {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n\n            if (this.state.spotifyAccess !== SpotifyAccess.DENIED) {\n                console.log('in Access Token', this.state.spotifyAccessToken)\n                const spotifyPlayer = new Spotify.Player({\n                    name: 'React Spotify Player',\n                    getOAuthToken: cb => {\n                        cb(this.state.spotifyAccessToken);\n                    }\n                });\n\n                // Playback status updates\n                spotifyPlayer.addListener('player_state_changed', state => {\n                    console.log('state in spotifyPlayer',state);\n                });\n\n\n                this.setState({\n                    loadingState: \"spotify scripts loaded\",\n                    spotifyPlayer\n                });\n\n                if (this.state.spotifyAccessToken !== null) {\n                    this.setState({\n                        spotifyAccess: SpotifyAccess.ALLOWED,\n                        loadingState: \"spotify token retrieved\"\n                    });\n                    this.connectToPlayer();\n                }\n\n            } else {\n                this.setState({loadingState: \"spotify authorization rejected\"});\n            }\n        }\n\n    }\n\n    // private authorizeSpotifyFromStorage = (e: StorageEvent) => {\n    //     console.log('in auth line 90')\n    //     if (e.key === \"spotifyAuthToken\") {\n    //         const spotifyAccessToken = e.newValue;\n\n    //         const spotifyAccess = getSpotifyAccess();\n    //         console.log('spotifyAccess', spotifyAccess)\n    //         if (spotifyAccess === SpotifyAccess.DENIED) {\n    //             this.setState({\n    //                 spotifyAccess: SpotifyAccess.DENIED,\n    //                 loadingState: \"spotify access denied\"\n    //             });\n    //         } else if (spotifyAccessToken !== null) {\n    //             this.setState({\n    //                 spotifyAccessToken: spotifyAccessToken,\n    //                 spotifyAccess: SpotifyAccess.ALLOWED,\n    //                 loadingState: \"spotify token retrieved\"\n    //             });\n    //         }\n    //         this.connectToPlayer();\n    //     }\n    // }\n\n    private connectToPlayer = () => {\n        console.log('in connect player')\n        if (this.state.spotifyPlayer) {\n            clearTimeout(this.connectToPlayerTimeout);\n            // Ready\n            this.state.spotifyPlayer.addListener('ready', ({device_id}) => {\n                console.log('Ready with Device ID', device_id);\n                this.setState({\n                    loadingState: \"spotify player ready\",\n                    spotifyDeviceId: device_id,\n                    spotifyPlayerReady: true\n                });\n            });\n\n            // Not Ready\n            this.state.spotifyPlayer.addListener('not_ready', ({device_id}) => {\n                console.log('Device ID has gone offline', device_id);\n            });\n\n            this.state.spotifyPlayer.connect()\n                .then((ev: any) => {\n                    this.setState({loadingState: \"connected to player\"});\n                });\n        } else {\n            this.connectToPlayerTimeout = setTimeout(this.connectToPlayer.bind(this), 1000);\n        }\n    }\n\n\n    private startPlayback = (spotify_uri: string) => {\n        fetch(\"https://api.spotify.com/v1/me/player/play?\" +\n            \"device_id=\" + this.state.spotifyDeviceId, {\n            method: 'PUT',\n            body: JSON.stringify({uris: [spotify_uri]}),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.spotifyAccessToken}`\n            }\n        }).then((ev) => {\n            console.log(ev);\n            if (ev.status === 403) {\n                this.setState({\n                    loadingState: \"you need to upgrade to premium for playback\",\n                    spotifyAccess: SpotifyAccess.NO_PREMIUM\n                });\n            } else {\n                this.setState({\n                    loadingState: \"playback started\",\n                    playbackOn: true, playbackPaused: false\n                });\n                console.log(\"Started playback\", this.state);\n            }\n        }).catch((error) => {\n            this.setState({loadingState: \"playback error: \" + error});\n        })\n    };\n\n    private resumePlayback = () => {\n        fetch(\"https://api.spotify.com/v1/me/player/play?\" +\n            \"device_id=\" + this.state.spotifyDeviceId, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.spotifyAccessToken}`\n            },\n        }).then((ev) => {\n            this.setState({playbackPaused: false});\n        });\n        console.log(\"Started playback\", this.state);\n    }\n\n    private pauseTrack = () => {\n        fetch(\"https://api.spotify.com/v1/me/player/pause?\" +\n            \"device_id=\" + this.state.spotifyDeviceId, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.spotifyAccessToken}`\n            },\n        }).then((ev) => {\n            this.setState({playbackPaused: true});\n        })\n    }\n\n    render() {\n        console.log('state spotifyPlayerReady',this.state.spotifyPlayerReady)\n        console.log('state playbackOn',this.state.playbackOn)\n        console.log('state playingRecordingId',this.props.playingRecordingId)\n        console.log('state playbackPaused',this.state.playbackPaused)\n        return (\n            <div className={styles.app}>\n                <h3>Spotify</h3>\n                <SpotifyAuthWindow/>\n                <div className={styles.player}>\n                    {this.state.spotifyPlayerReady &&\n                    <div onClick={() => {\n                        if (!this.state.playbackOn) {\n                            this.startPlayback(this.props.playingRecordingId);\n                        } else {\n                            if (this.state.playbackPaused) {\n                                this.resumePlayback();\n                            }\n                        }\n                    }}>\n                        <FaPlay/>\n                    </div>}\n                    {this.state.spotifyPlayerReady && this.state.playbackOn &&\n                    <div onClick={() => {\n                        if (!this.state.playbackPaused) {\n                            this.pauseTrack();\n                        }\n                    }}>\n                        <FaPause/>\n                    </div>}\n                </div>\n\n                <p className={styles.statusMessage}>{this.state.loadingState}</p>\n            </div>\n        );\n    }\n}\n\nexport default SpotifyPlayerContainer;"]},"metadata":{},"sourceType":"module"}