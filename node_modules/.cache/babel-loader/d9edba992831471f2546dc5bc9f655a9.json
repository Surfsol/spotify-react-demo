{"ast":null,"code":"import _slicedToArray from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/russ/Documents/spotify/spotify-react-demo/src/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { setSpotifyAccess, setSpotifyAccessToken, setSpotifyTokenExpirationTime } from \"./LocalStorageData\";\nimport { SpotifyAccess } from \"./SpotifyAccess\";\nimport { getTokenFromResponse } from './login/spotify';\nvar hashStr = window.location.hash; // everything in address after #, here spotify puts successfull auth tokens\n\nvar searchStr = window.location.search; // everything in address after ?, here spotify puts access denials\n// const hashParams = decodeHashParams(hashStr.slice(1, hashStr.length));\n// const searchParams = decodeHashParams(searchStr.slice(1, searchStr.length));\n\nconsole.log('hash', hashParams.access_token);\n\nif (hashParams.access_token) {\n  console.log('access', hashParams.access_token);\n  setSpotifyAccess(SpotifyAccess.ALLOWED);\n  setSpotifyAccessToken(hashParams.access_token);\n  setSpotifyTokenExpirationTime(hashParams.expires_in);\n  window.close();\n} else if (searchParams.error) {\n  setSpotifyAccess(SpotifyAccess.DENIED);\n  window.close();\n} else {\n  ReactDOM.render( /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }), document.getElementById('root'));\n}\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\n\n\nvar decodeHashParams = function decodeHashParams() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  useEffect(function () {\n    console.log('useEffect');\n    var hash = getTokenFromResponse();\n    console.log('hash useEff:', hash); //after get access token, clear from url\n\n    window.location.hash = \"\"; //setToken(hash.access_token)\n  }, []);\n  console.log('in index');\n  var hashParams = {};\n  var a = /\\+/g; // Regex for replacing addition symbol with a space\n\n  var r = /([^&;=]+)=?([^&;]*)/g;\n\n  var d = function d(s) {\n    return decodeURIComponent(s.replace(a, \" \"));\n  };\n\n  var e;\n\n  while (e = r.exec(str)) {\n    hashParams[d(e[1])] = d(e[2]);\n  }\n\n  return hashParams;\n};","map":{"version":3,"sources":["/home/russ/Documents/spotify/spotify-react-demo/src/index.tsx"],"names":["React","useEffect","useState","ReactDOM","App","setSpotifyAccess","setSpotifyAccessToken","setSpotifyTokenExpirationTime","SpotifyAccess","getTokenFromResponse","hashStr","window","location","hash","searchStr","search","console","log","hashParams","access_token","ALLOWED","expires_in","close","searchParams","error","DENIED","render","document","getElementById","decodeHashParams","token","setToken","a","r","d","s","decodeURIComponent","replace","e","exec","str"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,gBAAR,EAA0BC,qBAA1B,EAAiDC,6BAAjD,QAAqF,oBAArF;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,oBAAR,QAAmC,iBAAnC;AAEA,IAAMC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC,C,CAAsC;;AACtC,IAAMC,SAAS,GAAGH,MAAM,CAACC,QAAP,CAAgBG,MAAlC,C,CAA0C;AAC1C;AACA;;AAEAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBC,UAAU,CAACC,YAA9B;;AACA,IAAID,UAAU,CAACC,YAAf,EAA6B;AACzBH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,UAAU,CAACC,YAAjC;AACAd,EAAAA,gBAAgB,CAACG,aAAa,CAACY,OAAf,CAAhB;AACAd,EAAAA,qBAAqB,CAACY,UAAU,CAACC,YAAZ,CAArB;AACAZ,EAAAA,6BAA6B,CAACW,UAAU,CAACG,UAAZ,CAA7B;AACAV,EAAAA,MAAM,CAACW,KAAP;AACH,CAND,MAMO,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AAC3BnB,EAAAA,gBAAgB,CAACG,aAAa,CAACiB,MAAf,CAAhB;AACAd,EAAAA,MAAM,CAACW,KAAP;AACH,CAHM,MAGA;AACHnB,EAAAA,QAAQ,CAACuB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACH;AAED;AACA;AACA;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACE3B,QAAQ,EADV;AAAA;AAAA,MACjB4B,KADiB;AAAA,MACVC,QADU;;AAE3B9B,EAAAA,SAAS,CAAC,YAAI;AACVe,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,QAAMJ,IAAI,GAAGJ,oBAAoB,EAAjC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B,EAHU,CAIV;;AACAF,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB,CALU,CAMV;AACD,GAPM,EAOL,EAPK,CAAT;AASAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAMC,UAAqC,GAAG,EAA9C;AACA,MAAMc,CAAC,GAAG,KAAV,CAb2B,CAaT;;AAClB,MAAMC,CAAC,GAAG,sBAAV;;AACA,MAAMC,CAAC,GAAG,SAAJA,CAAI,CAACC,CAAD;AAAA,WAAeC,kBAAkB,CAACD,CAAC,CAACE,OAAF,CAAUL,CAAV,EAAa,GAAb,CAAD,CAAjC;AAAA,GAAV;;AACA,MAAIM,CAAJ;;AAEA,SAAOA,CAAC,GAAGL,CAAC,CAACM,IAAF,CAAOC,GAAP,CAAX,EAAwB;AACpBtB,IAAAA,UAAU,CAACgB,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAAF,CAAV,GAAsBJ,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAAvB;AACH;;AACD,SAAOpB,UAAP;AACH,CAtBD","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {setSpotifyAccess, setSpotifyAccessToken, setSpotifyTokenExpirationTime} from \"./LocalStorageData\";\nimport {SpotifyAccess} from \"./SpotifyAccess\";\nimport {getTokenFromResponse} from './login/spotify'\n\nconst hashStr = window.location.hash; // everything in address after #, here spotify puts successfull auth tokens\nconst searchStr = window.location.search; // everything in address after ?, here spotify puts access denials\n// const hashParams = decodeHashParams(hashStr.slice(1, hashStr.length));\n// const searchParams = decodeHashParams(searchStr.slice(1, searchStr.length));\n\nconsole.log('hash',hashParams.access_token)\nif (hashParams.access_token) {\n    console.log('access', hashParams.access_token)\n    setSpotifyAccess(SpotifyAccess.ALLOWED);\n    setSpotifyAccessToken(hashParams.access_token);\n    setSpotifyTokenExpirationTime(hashParams.expires_in);\n    window.close();\n} else if (searchParams.error) {\n    setSpotifyAccess(SpotifyAccess.DENIED);\n    window.close();\n} else {\n    ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\nconst decodeHashParams = () => {\n        const[token, setToken] = useState()\n    useEffect(()=>{\n        console.log('useEffect')\n        const hash = getTokenFromResponse();\n        console.log('hash useEff:', hash)\n        //after get access token, clear from url\n        window.location.hash = \"\";\n        //setToken(hash.access_token)\n      },[])\n\n    console.log('in index')\n    const hashParams: { [key: string]: string } = {};\n    const a = /\\+/g;  // Regex for replacing addition symbol with a space\n    const r = /([^&;=]+)=?([^&;]*)/g;\n    const d = (s: string) => decodeURIComponent(s.replace(a, \" \"));\n    let e;\n\n    while (e = r.exec(str)) {\n        hashParams[d(e[1])] = d(e[2]);\n    }\n    return hashParams;\n}\n"]},"metadata":{},"sourceType":"module"}