{"ast":null,"code":"var _jsxFileName = \"/home/russ/Documents/spotify/spotify-react-demo/src/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\n// const decodeHashParams = () => {\n//   console.log('on decodedHash');\n//   // console.log('in index')\n//   // const hashParams: { [key: string]: string } = {};\n//   // const a = /\\+/g;  // Regex for replacing addition symbol with a space\n//   // const r = /([^&;=]+)=?([^&;]*)/g;\n//   // const d = (s: string) => decodeURIComponent(s.replace(a, \" \"));\n//   // let e;\n//   // while (e = r.exec(str)) {\n//   //     hashParams[d(e[1])] = d(e[2]);\n//   // }\n//   return <App token={token} />;\n// };\n// export default decodeHashParams;","map":{"version":3,"sources":["/home/russ/Documents/spotify/spotify-react-demo/src/index.js"],"names":["React","useEffect","useState","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEAD,QAAQ,CAACE,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\n// const decodeHashParams = () => {\n//   console.log('on decodedHash');\n \n\n//   // console.log('in index')\n//   // const hashParams: { [key: string]: string } = {};\n//   // const a = /\\+/g;  // Regex for replacing addition symbol with a space\n//   // const r = /([^&;=]+)=?([^&;]*)/g;\n//   // const d = (s: string) => decodeURIComponent(s.replace(a, \" \"));\n//   // let e;\n\n//   // while (e = r.exec(str)) {\n//   //     hashParams[d(e[1])] = d(e[2]);\n//   // }\n//   return <App token={token} />;\n// };\n// export default decodeHashParams;\n"]},"metadata":{},"sourceType":"module"}