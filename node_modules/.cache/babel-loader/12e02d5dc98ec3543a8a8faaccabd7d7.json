{"ast":null,"code":"import _slicedToArray from \"/home/russ/Documents/spotify/spotify-react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { getTokenFromResponse } from './login/spotify';\nvar hashStr = window.location.hash; // everything in address after #, here spotify puts successfull auth tokens\n\nvar searchStr = window.location.search; // everything in address after ?, here spotify puts access denials\n// const hashParams = decodeHashParams(hashStr.slice(1, hashStr.length));\n// const searchParams = decodeHashParams(searchStr.slice(1, searchStr.length));\n// console.log('hash',hashParams.access_token)\n// if (hashParams.access_token) {\n//     console.log('access', hashParams.access_token)\n//     setSpotifyAccess(SpotifyAccess.ALLOWED);\n//     setSpotifyAccessToken(hashParams.access_token);\n//     setSpotifyTokenExpirationTime(hashParams.expires_in);\n//     window.close();\n// } else if (searchParams.error) {\n//     setSpotifyAccess(SpotifyAccess.DENIED);\n//     window.close();\n// } else {\n//     ReactDOM.render(<App />, document.getElementById('root'));\n// }\n\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\n\nvar decodeHashParams = function decodeHashParams() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  useEffect(function () {\n    console.log('useEffect');\n    var hash = getTokenFromResponse();\n    console.log('hash useEff:', hash); //after get access token, clear from url\n\n    window.location.hash = \"\"; //setToken(hash.access_token)\n  }, []);\n  console.log('in index');\n  var hashParams = {};\n  var a = /\\+/g; // Regex for replacing addition symbol with a space\n\n  var r = /([^&;=]+)=?([^&;]*)/g;\n\n  var d = function d(s) {\n    return decodeURIComponent(s.replace(a, \" \"));\n  };\n\n  var e;\n\n  while (e = r.exec(str)) {\n    hashParams[d(e[1])] = d(e[2]);\n  }\n\n  return hashParams;\n};","map":{"version":3,"sources":["/home/russ/Documents/spotify/spotify-react-demo/src/index.tsx"],"names":["useEffect","useState","getTokenFromResponse","hashStr","window","location","hash","searchStr","search","decodeHashParams","token","setToken","console","log","hashParams","a","r","d","s","decodeURIComponent","replace","e","exec","str"],"mappings":";AAAA,SAAeA,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAKA,SAAQC,oBAAR,QAAmC,iBAAnC;AAEA,IAAMC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC,C,CAAsC;;AACtC,IAAMC,SAAS,GAAGH,MAAM,CAACC,QAAP,CAAgBG,MAAlC,C,CAA0C;AAC1C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACER,QAAQ,EADV;AAAA;AAAA,MACjBS,KADiB;AAAA,MACVC,QADU;;AAE3BX,EAAAA,SAAS,CAAC,YAAI;AACVY,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,QAAMP,IAAI,GAAGJ,oBAAoB,EAAjC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,IAA5B,EAHU,CAIV;;AACAF,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB,CALU,CAMV;AACD,GAPM,EAOL,EAPK,CAAT;AASAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAMC,UAAqC,GAAG,EAA9C;AACA,MAAMC,CAAC,GAAG,KAAV,CAb2B,CAaT;;AAClB,MAAMC,CAAC,GAAG,sBAAV;;AACA,MAAMC,CAAC,GAAG,SAAJA,CAAI,CAACC,CAAD;AAAA,WAAeC,kBAAkB,CAACD,CAAC,CAACE,OAAF,CAAUL,CAAV,EAAa,GAAb,CAAD,CAAjC;AAAA,GAAV;;AACA,MAAIM,CAAJ;;AAEA,SAAOA,CAAC,GAAGL,CAAC,CAACM,IAAF,CAAOC,GAAP,CAAX,EAAwB;AACpBT,IAAAA,UAAU,CAACG,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAAF,CAAV,GAAsBJ,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAAvB;AACH;;AACD,SAAOP,UAAP;AACH,CAtBD","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {setSpotifyAccess, setSpotifyAccessToken, setSpotifyTokenExpirationTime} from \"./LocalStorageData\";\nimport {SpotifyAccess} from \"./SpotifyAccess\";\nimport {getTokenFromResponse} from './login/spotify'\n\nconst hashStr = window.location.hash; // everything in address after #, here spotify puts successfull auth tokens\nconst searchStr = window.location.search; // everything in address after ?, here spotify puts access denials\n// const hashParams = decodeHashParams(hashStr.slice(1, hashStr.length));\n// const searchParams = decodeHashParams(searchStr.slice(1, searchStr.length));\n\n// console.log('hash',hashParams.access_token)\n// if (hashParams.access_token) {\n//     console.log('access', hashParams.access_token)\n//     setSpotifyAccess(SpotifyAccess.ALLOWED);\n//     setSpotifyAccessToken(hashParams.access_token);\n//     setSpotifyTokenExpirationTime(hashParams.expires_in);\n//     window.close();\n// } else if (searchParams.error) {\n//     setSpotifyAccess(SpotifyAccess.DENIED);\n//     window.close();\n// } else {\n//     ReactDOM.render(<App />, document.getElementById('root'));\n// }\n\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\nconst decodeHashParams = () => {\n        const[token, setToken] = useState()\n    useEffect(()=>{\n        console.log('useEffect')\n        const hash = getTokenFromResponse();\n        console.log('hash useEff:', hash)\n        //after get access token, clear from url\n        window.location.hash = \"\";\n        //setToken(hash.access_token)\n      },[])\n\n    console.log('in index')\n    const hashParams: { [key: string]: string } = {};\n    const a = /\\+/g;  // Regex for replacing addition symbol with a space\n    const r = /([^&;=]+)=?([^&;]*)/g;\n    const d = (s: string) => decodeURIComponent(s.replace(a, \" \"));\n    let e;\n\n    while (e = r.exec(str)) {\n        hashParams[d(e[1])] = d(e[2]);\n    }\n    return hashParams;\n}\n"]},"metadata":{},"sourceType":"module"}