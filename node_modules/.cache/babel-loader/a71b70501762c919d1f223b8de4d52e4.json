{"ast":null,"code":"var _jsxFileName = \"/home/russ/Documents/spotify/spotify-react-demo/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { setSpotifyAccess, setSpotifyAccessToken, setSpotifyTokenExpirationTime } from \"./LocalStorageData\";\nimport { SpotifyAccess } from \"./SpotifyAccess\";\nvar hashStr = window.location.hash; // everything in address after #, here spotify puts successfull auth tokens\n\nvar searchStr = window.location.search; // everything in address after ?, here spotify puts access denials\n\nvar hashParams = decodeHashParams(hashStr.slice(1, hashStr.length));\nvar searchParams = decodeHashParams(searchStr.slice(1, searchStr.length));\ncos;\n\nif (hashParams.access_token) {\n  console.log('access', hashParams.access_token);\n  setSpotifyAccess(SpotifyAccess.ALLOWED);\n  setSpotifyAccessToken(hashParams.access_token);\n  setSpotifyTokenExpirationTime(hashParams.expires_in);\n  window.close();\n} else if (searchParams.error) {\n  setSpotifyAccess(SpotifyAccess.DENIED);\n  window.close();\n} else {\n  ReactDOM.render( /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }), document.getElementById('root'));\n}\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\n\n\nexport function decodeHashParams(str) {\n  var hashParams = {};\n  var a = /\\+/g; // Regex for replacing addition symbol with a space\n\n  var r = /([^&;=]+)=?([^&;]*)/g;\n\n  var d = function d(s) {\n    return decodeURIComponent(s.replace(a, \" \"));\n  };\n\n  var e;\n\n  while (e = r.exec(str)) {\n    hashParams[d(e[1])] = d(e[2]);\n  }\n\n  return hashParams;\n}","map":{"version":3,"sources":["/home/russ/Documents/spotify/spotify-react-demo/src/index.tsx"],"names":["React","ReactDOM","App","setSpotifyAccess","setSpotifyAccessToken","setSpotifyTokenExpirationTime","SpotifyAccess","hashStr","window","location","hash","searchStr","search","hashParams","decodeHashParams","slice","length","searchParams","cos","access_token","console","log","ALLOWED","expires_in","close","error","DENIED","render","document","getElementById","str","a","r","d","s","decodeURIComponent","replace","e","exec"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,gBAAR,EAA0BC,qBAA1B,EAAiDC,6BAAjD,QAAqF,oBAArF;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,IAAMC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC,C,CAAsC;;AACtC,IAAMC,SAAS,GAAGH,MAAM,CAACC,QAAP,CAAgBG,MAAlC,C,CAA0C;;AAC1C,IAAMC,UAAU,GAAGC,gBAAgB,CAACP,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBR,OAAO,CAACS,MAAzB,CAAD,CAAnC;AACA,IAAMC,YAAY,GAAGH,gBAAgB,CAACH,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmBJ,SAAS,CAACK,MAA7B,CAAD,CAArC;AACAE,GAAG;;AACH,IAAIL,UAAU,CAACM,YAAf,EAA6B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,UAAU,CAACM,YAAjC;AACAhB,EAAAA,gBAAgB,CAACG,aAAa,CAACgB,OAAf,CAAhB;AACAlB,EAAAA,qBAAqB,CAACS,UAAU,CAACM,YAAZ,CAArB;AACAd,EAAAA,6BAA6B,CAACQ,UAAU,CAACU,UAAZ,CAA7B;AACAf,EAAAA,MAAM,CAACgB,KAAP;AACH,CAND,MAMO,IAAIP,YAAY,CAACQ,KAAjB,EAAwB;AAC3BtB,EAAAA,gBAAgB,CAACG,aAAa,CAACoB,MAAf,CAAhB;AACAlB,EAAAA,MAAM,CAACgB,KAAP;AACH,CAHM,MAGA;AACHvB,EAAAA,QAAQ,CAAC0B,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACH;AAED;AACA;AACA;;;AACA,OAAO,SAASf,gBAAT,CAA0BgB,GAA1B,EAAkE;AACrE,MAAMjB,UAAqC,GAAG,EAA9C;AACA,MAAMkB,CAAC,GAAG,KAAV,CAFqE,CAEnD;;AAClB,MAAMC,CAAC,GAAG,sBAAV;;AACA,MAAMC,CAAC,GAAG,SAAJA,CAAI,CAACC,CAAD;AAAA,WAAeC,kBAAkB,CAACD,CAAC,CAACE,OAAF,CAAUL,CAAV,EAAa,GAAb,CAAD,CAAjC;AAAA,GAAV;;AACA,MAAIM,CAAJ;;AAEA,SAAOA,CAAC,GAAGL,CAAC,CAACM,IAAF,CAAOR,GAAP,CAAX,EAAwB;AACpBjB,IAAAA,UAAU,CAACoB,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAAF,CAAV,GAAsBJ,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAAvB;AACH;;AACD,SAAOxB,UAAP;AACH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {setSpotifyAccess, setSpotifyAccessToken, setSpotifyTokenExpirationTime} from \"./LocalStorageData\";\nimport {SpotifyAccess} from \"./SpotifyAccess\";\n\nconst hashStr = window.location.hash; // everything in address after #, here spotify puts successfull auth tokens\nconst searchStr = window.location.search; // everything in address after ?, here spotify puts access denials\nconst hashParams = decodeHashParams(hashStr.slice(1, hashStr.length));\nconst searchParams = decodeHashParams(searchStr.slice(1, searchStr.length));\ncos\nif (hashParams.access_token) {\n    console.log('access', hashParams.access_token)\n    setSpotifyAccess(SpotifyAccess.ALLOWED);\n    setSpotifyAccessToken(hashParams.access_token);\n    setSpotifyTokenExpirationTime(hashParams.expires_in);\n    window.close();\n} else if (searchParams.error) {\n    setSpotifyAccess(SpotifyAccess.DENIED);\n    window.close();\n} else {\n    ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n/**\n * decodes a parameter string (p1=v1&p2=v2&... syntax) into the object {p1: v1, p2: v2, ...}\n */\nexport function decodeHashParams(str: string): { [key: string]: string } {\n    const hashParams: { [key: string]: string } = {};\n    const a = /\\+/g;  // Regex for replacing addition symbol with a space\n    const r = /([^&;=]+)=?([^&;]*)/g;\n    const d = (s: string) => decodeURIComponent(s.replace(a, \" \"));\n    let e;\n\n    while (e = r.exec(str)) {\n        hashParams[d(e[1])] = d(e[2]);\n    }\n    return hashParams;\n}\n"]},"metadata":{},"sourceType":"module"}